{"version":3,"sources":["components/Header.js","components/Options.js","components/Entry.js","components/Display.js","components/Control.js","components/Simulation.js","components/About.js","components/Body.js","components/Footer.js","App.js","index.js"],"names":["Header","Fragment","className","Options","props","type","placeholder","min","max","required","onChange","e","setNumMatches","numMatches","candValue","target","value","class","onClick","setShowAbout","Entry","preferenceElems","i","isLeft","inputId","count","push","maxlength","id","onInput","handleChange","key","trim","setInputState","state","Display","useState","showWarning","setShowWarning","leftElems","rightElems","setEquals","set1","set2","array1","Array","from","sort","array2","JSON","stringify","validateData","data","prefixes","j","length","k","menList","inputState","menSet","Set","womenList","womenSet","size","forEach","item","index","prefList","prefSet","onReset","setShowSim","preventDefault","handleSubmit","Control","isPlay","setIsPlay","setControl","meta","progress","currentTarget","Anime","ReactAnime","Simulation","centerRef","useRef","centerCoordLeftX","setCenterCoordLeftX","centerCoordRightX","setCenterCoordRightX","centerCoordY","setCenterCoordY","M1Ref","W1Ref","M2Ref","W2Ref","M3Ref","W3Ref","M4Ref","W4Ref","M1CoordX","setM1CoordX","M1CoordY","setM1CoordY","M2CoordX","setM2CoordX","M2CoordY","setM2CoordY","M3CoordX","setM3CoordX","M3CoordY","setM3CoordY","M4CoordX","setM4CoordX","M4CoordY","setM4CoordY","W1CoordX","setW1CoordX","W1CoordY","setW1CoordY","W2CoordX","setW2CoordX","W2CoordY","setW2CoordY","W3CoordX","setW3CoordX","W3CoordY","setW3CoordY","W4CoordX","setW4CoordX","W4CoordY","setW4CoordY","idToCoordX","idToCoordY","idToRef","idToSetterX","idToSetterY","toggleAnime","setToggleAnime","useEffect","current","getBoundingClientRect","left","right","top","bottom","setterWX","setterMY","setterWY","mRef","wRef","setterMX","timeline","simInstructions","keyframe","targets","manId","translateX","translateY","delay","duration","easing","womanId","color","borderColor","backgroundColor","opacity","fontWeight","leftPreferences","rightPreferences","ref","control","currentTime","setMeta","initial","animeConfig","autoplay","About","href","Body","Map","showSim","showAbout","rank","reversePersonIndex","reversePrefIndex","console","log","personToPref","matches","queue","isPreferred","woman","man1","man2","currentMan","shift","proposedWoman","prefId","colorPrefId","rivalPartner","rivalId","rivalColorPrefId","getSimInstructions","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf179ef9.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Header.css';\n\nfunction Header() {\n  return (\n    <React.Fragment>\n        <h1><div className=\"Title\">\n            Gale-Shapley Visualizer\n        </div></h1>\n        <div className=\"Subtitle\">\n            A stable matching algorithm animated for the human eye\n        </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../css/Options.css';\n\nfunction Options(props) {\n    const condUpdate = (numMatches, candValue) => {\n        return (candValue == 2 || candValue == 3 || candValue == 4) ? candValue : numMatches;\n    }\n    \n    const handleClick = () => {\n        props.setShowAbout(true)\n    }\n    return (\n        <React.Fragment>\n            <div className=\"OptionsArea\">\n                <div className=\"EndColumnArea\"></div>\n                <div className=\"MidColumnArea\">\n                    Number of Matches:\n                    <input type=\"number\" className=\"NumMatchesInput\" placeholder=\"2-4 matches\"\n                            min=\"2\" max=\"4\" required onChange={e => props.setNumMatches(condUpdate(props.numMatches, e.target.value))}>\n                    </input>\n                </div>\n                <div class=\"EndColumnArea\">\n                    <button class=\"AboutButton\" onClick={handleClick}>About</button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default Options;","import React from 'react';\nimport '../css/Entry.css';\n\nfunction Entry(props) {\n\n    const preferenceElems = [];\n    for (var i = 1; i <= props.numMatches; i++) {\n        if (props.isLeft) {\n            var inputId = \"M\" + props.count + \"-P\" + i;\n            preferenceElems.push(<div className=\"LeftPreference\">\n                                     <input type=\"text\" className=\"PreferenceInput\"\n                                         maxlength=\"7\" id={inputId} required placeholder={\"Pref \" + i}\n                                         onInput={e => handleChange(e)}>\n                                     </input>\n                                 </div>);\n        } else {\n            var inputId = \"W\" + props.count + \"-P\" + i;\n            preferenceElems.push(<div className=\"RightPreference\">\n                                     <input type=\"text\" class=\"PreferenceInput\" \n                                         maxlength=\"7\" id={inputId} required placeholder={\"Pref \" + i}\n                                         onInput={e => handleChange(e)}>\n                                     </input>\n                                 </div>);\n        }\n    }\n\n    const handleChange = (e) => {\n        var key = e.target.id;\n        var value = e.target.value.trim();\n        props.setInputState(state => ({\n            ...state,\n            [key]: value,\n        }))\n    };\n\n    if (props.isLeft) {\n        return (\n            <React.Fragment>\n                <div className=\"LeftEntryArea\">\n                    <div className=\"PreferenceArea\">\n                        {preferenceElems}\n                    </div>\n                    <div className=\"LeftPerson\">\n                        <input type=\"text\" class=\"PersonInput\" maxlength=\"7\" id={\"M\" + props.count} required \n                            placeholder={\"Prop \" + props.count} onInput={e => handleChange(e)}></input>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <div className=\"RightEntryArea\">\n                    <div className=\"RightPerson\">\n                        <input type=\"text\" class=\"PersonInput\" maxlength=\"7\" id={\"W\" + props.count} required \n                            placeholder={\"Recip \" + props.count} onInput={e => handleChange(e)}></input>\n                    </div>\n                    <div className=\"PreferenceArea\">\n                        {preferenceElems}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n    \n}\n\nexport default Entry;","import React, { useState } from 'react';\nimport Entry from './Entry.js';\nimport '../css/Display.css';\n\nfunction Display(props) {\n\n    const [showWarning, setShowWarning] = useState(false);\n\n    const leftElems = [];\n    for (var i = 1; i <= props.numMatches; i++) {\n        leftElems.push(<Entry numMatches={props.numMatches} count={i} isLeft={true} setInputState={props.setInputState}/>);\n    }\n\n    const rightElems = [];\n    for (var i = 1; i <= props.numMatches; i++) {\n        rightElems.push(<Entry numMatches={props.numMatches} count={i} isLeft={false} setInputState={props.setInputState}/>);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!validateData(props.numMatches, props.inputState)) {\n            setShowWarning(true);\n        } else {\n            setShowWarning(false);\n            props.setShowSim(true);\n        }\n    }\n\n    const handleReset = () => {\n        setShowWarning(false);\n        props.setInputState({});\n    }\n\n    const handleDemo = (e) => {\n        var demoInputData = {\n            'M1': 'Aaron',\n            'M2': 'Bryan',\n            'W1': 'Chloe',\n            'W2': 'Dana',\n            'M1-P1': 'Chloe',\n            'M1-P2': 'Dana',\n            'M2-P1': 'Chloe',\n            'M2-P2': 'Dana',\n            'W1-P1': 'Bryan',\n            'W1-P2': 'Aaron',\n            'W2-P1': 'Aaron',\n            'W2-P2': 'Bryan',\n        };\n        props.setInputState(demoInputData);\n        props.setNumMatches(2);\n        props.setShowSim(true);\n    }\n\n    const shareElements = (set1, set2) => {\n        Array.from(set1).forEach(function (item, index) {\n            if (item in set2) {\n                return false;\n            }\n        });\n        return true;\n    }\n\n    const setEquals = (set1, set2) => {\n        var array1 = Array.from(set1);\n        array1.sort();\n\n        var array2 = Array.from(set2);\n        array2.sort();\n        \n        return JSON.stringify(array1) === JSON.stringify(array2);\n    }\n\n    const validateData = (numMatches, data) => {\n        // Check if inputs are well-formed\n        var prefixes = [\"M\", \"W\"];\n        for (var i = 0; i < 2; i++) {\n            for (var j = 1; j <= numMatches; j++) {\n                if (!((prefixes[i] + j) in data)) {\n                    return false;\n                }\n\n                if (data[prefixes[i] + j].length == 0) {\n                    return false;\n                }\n\n                for (var k = 1; k <= numMatches; k++) {\n                    if (!((prefixes[i] + j + \"-P\" + k) in data)) {\n                        return false;\n                    }\n\n                    if (data[prefixes[i] + j + \"-P\" + k].length == 0) {\n                        return false;\n                    }\n                }\n            }\n        }\n\n        // Get sets of men and women\n        var menList = []\n        for (var i = 1; i <= props.numMatches; i++) {\n            menList.push(props.inputState[\"M\" + i]);\n        }\n        var menSet = new Set(menList);\n\n        var womenList = []\n        for (var i = 1; i <= props.numMatches; i++) {\n            womenList.push(props.inputState[\"W\" + i]);\n        }\n        var womenSet = new Set(womenList);\n\n        if (menSet.size != props.numMatches || womenSet.size != props.numMatches || !shareElements(menSet, womenSet)) {\n            return false;\n        }\n\n        // Check if preferences match\n        var prefixes = [\"M\", \"W\"];\n        for (var i = 0; i < 2; i++) {\n            for (var j = 1; j <= props.numMatches; j++) {\n                var prefList = []\n                for (var k = 1; k <= props.numMatches; k++) {\n                    prefList.push(props.inputState[prefixes[i] + j + \"-P\" + k]);\n                }\n                var prefSet = new Set(prefList);\n                if (i == 0 && !setEquals(prefSet, womenSet)) {\n                    return false;\n                } else if (i == 1 && !setEquals(prefSet, menSet)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    return (\n        <React.Fragment>\n            <form id=\"inputForm\" onReset={handleReset}>\n                <div className=\"LabelArea\">\n                    <div className=\"LabelEndColumn\">Proposers</div>\n                    <div className=\"LabelMidColumn\"></div>\n                    <div className=\"LabelEndColumn\">Recipients</div>\n                </div>\n                <div className=\"DisplayArea\">\n                    <div className=\"DisplayLeftColumn\">\n                        {leftElems}\n                    </div>\n                    <div className=\"DisplayMidColumn\"></div>\n                    <div className=\"DisplayRightColumn\">\n                        {rightElems}\n                    </div>\n                </div>\n                <div className=\"BottomArea\">\n                    <div className=\"LeftBottomArea\">\n                        <input type=\"reset\" className=\"DemoButton\" onClick={handleDemo} value=\"Demo\"/>\n                    </div>\n                    <div className=\"RightBottomArea\">\n                        <input type=\"reset\" className=\"ResetButton\"/>\n                        <button type=\"submit\" className=\"SubmitButton\" onClick={e => handleSubmit(e)}>Visualize</button>\n                    </div>\n                </div>\n            </form>\n            {showWarning &&\n                <div className=\"WarningArea\">\n                    <div className=\"WarningPaper\">\n                        <div className=\"WarningPaperTitle\">\n                            Input Error\n                        </div>\n                        <hr className=\"WarningPaperLine\"></hr>\n                        <div className=\"WarningPaperBody\">\n                            Check that the following are correct:\n                            <ul>\n                                <li>Proposer and Recipient names are <b>unique</b> and distinct from each other</li>\n                                <li>A Proposer's preferences are the set of Recipients, and vice versa</li>\n                                <li>All names must be valid and non-empty</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport '../css/Control.css';\n\nfunction Control(props) {\n\n    const handleGoBack = () => {\n        props.setInputState({})\n        props.setShowSim(false)\n    }\n\n    const [isPlay, setIsPlay] = useState(true);\n\n    return (\n        <React.Fragment>\n            <div className=\"BottomSimArea\">\n                <div className=\"BottomLeftSimArea\">\n                    {!isPlay && // play button shows => not playing right now\n                    <div\n                        className=\"PlayButton\"\n                        onClick={() => {\n                        props.setControl(\"play\");\n                        setIsPlay(true); \n                        }}>Play</div>\n                    }\n                    {isPlay && // pause button shows => playing right now\n                    <div\n                        className=\"PauseButton\"\n                        onClick={() => {\n                        props.setControl(\"pause\");\n                        setIsPlay(false);\n                        }}>Pause</div>\n                    }\n\n                    <div\n                        className=\"RestartButton\"\n                        onClick={() => {\n                        props.setControl(\"restart\");\n                        setIsPlay(true);\n                        }}>Restart</div>\n                    <div\n                        className=\"SkipButton\"\n                        onClick={() => {\n                        props.setControl([\"seek\", 100]);\n                        setIsPlay(false);\n                        }}>Skip to End</div>\n                </div>\n\n                <div className=\"BottomRightSimArea\">\n                    <button className=\"GoBackSimButton\" onClick={() => handleGoBack()}>\n                        Go Back\n                    </button>\n                </div>\n            </div>\n            <div className=\"SliderArea\">\n                <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    value={props.meta.progress || 0}\n                    className=\"slider\"\n                    onChange={e => props.setControl([\"seek\", e.currentTarget.value])}>\n                </input>\n                <div className='SliderNote'>\n                    Pause to Scrub\n                    <br />\n                    and Restart\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default Control;\n\n","import React, { useRef, useState, useEffect } from 'react';\nimport Control from './Control.js';\nimport '../css/Simulation.css';\nimport ReactAnime from 'react-animejs'\n\nconst { Anime } = ReactAnime;\n\nfunction Simulation(props) {\n\n    const centerRef = useRef(null);\n\n    const [centerCoordLeftX, setCenterCoordLeftX] = useState();\n    const [centerCoordRightX, setCenterCoordRightX] = useState();\n    const [centerCoordY, setCenterCoordY] = useState();\n\n    const M1Ref = useRef(null);\n    const W1Ref = useRef(null);\n    const M2Ref = useRef(null);\n    const W2Ref = useRef(null);\n    const M3Ref = useRef(null);\n    const W3Ref = useRef(null);\n    const M4Ref = useRef(null);\n    const W4Ref = useRef(null);\n\n    const [M1CoordX, setM1CoordX] = useState();\n    const [M1CoordY, setM1CoordY] = useState();\n    const [M2CoordX, setM2CoordX] = useState();\n    const [M2CoordY, setM2CoordY] = useState();\n    const [M3CoordX, setM3CoordX] = useState();\n    const [M3CoordY, setM3CoordY] = useState();\n    const [M4CoordX, setM4CoordX] = useState();\n    const [M4CoordY, setM4CoordY] = useState();\n\n    const [W1CoordX, setW1CoordX] = useState();\n    const [W1CoordY, setW1CoordY] = useState();\n    const [W2CoordX, setW2CoordX] = useState();\n    const [W2CoordY, setW2CoordY] = useState();\n    const [W3CoordX, setW3CoordX] = useState();\n    const [W3CoordY, setW3CoordY] = useState();\n    const [W4CoordX, setW4CoordX] = useState();\n    const [W4CoordY, setW4CoordY] = useState();\n\n    const idToCoordX = {\n        \"M1\": M1CoordX,\n        \"M2\": M2CoordX,\n        \"M3\": M3CoordX,\n        \"M4\": M4CoordX,\n        \"W1\": W1CoordX,\n        \"W2\": W2CoordX,\n        \"W3\": W3CoordX,\n        \"W4\": W4CoordX,\n    }\n\n    const idToCoordY = {\n        \"M1\": M1CoordY,\n        \"M2\": M2CoordY,\n        \"M3\": M3CoordY,\n        \"M4\": M4CoordY,\n        \"W1\": W1CoordY,\n        \"W2\": W2CoordY,\n        \"W3\": W3CoordY,\n        \"W4\": W4CoordY,\n    }\n\n    const idToRef = {\n        \"M1\": M1Ref,\n        \"M2\": M2Ref,\n        \"M3\": M3Ref,\n        \"M4\": M4Ref,\n        \"W1\": W1Ref,\n        \"W2\": W2Ref,\n        \"W3\": W3Ref,\n        \"W4\": W4Ref,\n    }\n\n    const idToSetterX = {\n        \"M1\": setM1CoordX,\n        \"M2\": setM2CoordX,\n        \"M3\": setM3CoordX,\n        \"M4\": setM4CoordX,\n        \"W1\": setW1CoordX,\n        \"W2\": setW2CoordX,\n        \"W3\": setW3CoordX,\n        \"W4\": setW4CoordX,\n    }\n\n    const idToSetterY = {\n        \"M1\": setM1CoordY,\n        \"M2\": setM2CoordY,\n        \"M3\": setM3CoordY,\n        \"M4\": setM4CoordY,\n        \"W1\": setW1CoordY,\n        \"W2\": setW2CoordY,\n        \"W3\": setW3CoordY,\n        \"W4\": setW4CoordY,\n    }\n\n    const [toggleAnime, setToggleAnime] = useState(false);\n\n    useEffect(() => {\n        setCenterCoordLeftX(centerRef.current.getBoundingClientRect().left);\n        setCenterCoordRightX(centerRef.current.getBoundingClientRect().right);\n        setCenterCoordY((centerRef.current.getBoundingClientRect().top + centerRef.current.getBoundingClientRect().bottom) / 2);\n\n        for (var i = 1; i <= props.numMatches; i++) {\n            const setterMX = idToSetterX[\"M\" + i];\n            const setterWX = idToSetterX[\"W\" + i];\n            const setterMY = idToSetterY[\"M\" + i];\n            const setterWY = idToSetterY[\"W\" + i];\n\n            const mRef = idToRef[\"M\" + i];\n            const wRef = idToRef[\"W\" + i];\n\n            setterMX(mRef.current.getBoundingClientRect().left);\n            setterWX(wRef.current.getBoundingClientRect().right);\n\n            setterMY(mRef.current.getBoundingClientRect().top);\n            setterWY(wRef.current.getBoundingClientRect().top);\n        }\n\n        setToggleAnime(true);\n    })\n\n    var timeline = [];\n    for (const keyframe of props.simInstructions) {\n        switch(keyframe.type) {\n            case 'Move In':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.manId,\n                    translateX: centerCoordLeftX - idToCoordX[keyframe.manId] + 10,\n                    translateY: centerCoordY - idToCoordY[keyframe.manId] - 20,\n                    delay: 1000,\n                    duration: 1000,\n                    easing: 'easeInOutSine',\n                })\n\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.womanId,\n                    translateX: centerCoordRightX - idToCoordX[keyframe.womanId] - 10,\n                    translateY: centerCoordY - idToCoordY[keyframe.womanId] - 20,\n                    duration: 1000,\n                    easing: 'easeInOutSine',\n                })\n                break;\n            case 'Move Out':\n                if (keyframe.color == \"none\") {\n                    timeline.push(\n                    {\n                        targets: \"#\" + keyframe.womanId,\n                        translateX: 0,\n                        translateY: 0,\n                        duration: 1000,\n                        easing: 'easeInOutSine',\n                    })\n    \n                    timeline.push(\n                    {\n                        targets: \"#\" + keyframe.manId,\n                        translateX: 0,\n                        translateY: 0,\n                        duration: 1000,\n                        easing: 'easeInOutSine',\n                    })\n                } else {\n                    timeline.push(\n                    {\n                        targets: \"#\" + keyframe.womanId,\n                        translateX: 0,\n                        translateY: 0,\n                        duration: 1000,\n                        easing: 'easeInOutSine',\n                        borderColor: keyframe.color,\n                    })\n\n                    timeline.push(\n                    {\n                        targets: \"#\" + keyframe.manId,\n                        translateX: 0,\n                        translateY: 0,\n                        duration: 1000,\n                        easing: 'easeInOutSine',\n                        borderColor: keyframe.color,\n                    })\n                }\n                break;\n            case 'Flash Center':\n                timeline.push(\n                {\n                    targets: \"#Center\",\n                    backgroundColor: keyframe.color,\n                    delay: 1000,\n                    duration: 500,\n                    easing: 'easeInOutSine',\n                })\n\n                timeline.push(\n                {\n                    targets: \"#Center\",\n                    backgroundColor: '#FFFFFF',\n                    duration: 500,\n                    easing: 'easeInOutSine',\n                })\n                break;\n            case 'Color Preference':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.id,\n                    duration: 500,\n                    borderColor: keyframe.color,\n                    easing: 'easeInOutSine',\n                })\n                break;\n            case 'Discolor Preference':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.id,\n                    duration: 500,\n                    borderColor: '#C1C1C1',\n                    easing: 'easeInOutSine',\n                })\n                break;\n            case 'Free Preference':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.id,\n                    delay: 1000,\n                    duration: 500,\n                    opacity: 0,\n                    easing: 'easeInOutSine',\n                })\n                break;\n            case 'Bold Preference':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.id,\n                    delay: 1000,\n                    duration: 500,\n                    fontWeight: '900',\n                    easing: 'easeInOutSine',\n                    backgroundColor: '#E5E5E5'\n                })\n                break;\n            case 'Free Person':\n                timeline.push(\n                {\n                    targets: \"#\" + keyframe.id,\n                    easing: 'easeInOutSine',\n                    delay: 100,\n                    duration: 500,\n                    borderColor: '#888888',\n                })\n                break;\n            case 'Flush Preferences':\n                timeline.push({delay: 1000})\n\n                for (var i = 1; i <= props.numMatches; i++) {\n                    for (var j = 1; j <= props.numMatches; j++) {\n                        timeline.push(\n                        {\n                            targets: \"#M\" + i + \"-P\" + j,\n                            duration: 100,\n                            opacity: 0,\n                            easing: 'easeInOutSine',\n                        })\n                    }\n\n                    for (var j = 1; j <= props.numMatches; j++) {\n                        timeline.push(\n                        {\n                            targets: \"#W\" + i + \"-P\" + j,\n                            duration: 100,\n                            opacity: 0,\n                            easing: 'easeInOutSine',\n                        })\n                    }\n                }\n\n                timeline.push(\n                    {\n                        targets: \"#Center\",\n                        duration: 100,\n                        opacity: 0,\n                        easing: 'easeInOutSine',\n                    })\n                break;\n            default:\n          }\n    }\n\n    const leftElems = []\n    const rightElems = []\n    for (var i = 1; i <= props.numMatches; i++) {\n        var leftPreferences = []\n        var rightPreferences = []\n        for (var j = 1; j <= props.numMatches; j++) {\n            leftPreferences.push(\n                <div className=\"LeftPreference\">\n                    <div type=\"text\" className=\"PreferenceSimInput\" id={\"M\" + i + \"-P\" + j}>\n                        {props.inputState[\"M\" + i + \"-P\" + j]}\n                    </div>\n                </div>\n            );\n\n            rightPreferences.push(\n                <div className=\"RightPreference\">\n                    <div type=\"text\" className=\"PreferenceSimInput\" id={\"W\" + i + \"-P\" + j}>\n                        {props.inputState[\"W\" + i + \"-P\" + j]}\n                    </div>\n                </div>\n            );\n        }\n\n        leftElems.push(\n            <div className=\"LeftEntryArea\">\n                <div className=\"PreferenceArea\">\n                    {leftPreferences}\n                </div>\n                <div className=\"LeftPerson\">\n                    <div type=\"text\" className=\"PersonSimInput\" id={\"M\" + i} ref={idToRef[\"M\" + i]}>\n                        {props.inputState[\"M\" + i]}\n                    </div>\n                </div>\n            </div>\n        );\n\n        rightElems.push(\n            <div className=\"RightEntryArea\">\n                <div className=\"RightPerson\">\n                    <div type=\"text\" className=\"PersonSimInput\" id={\"W\" + i} ref={idToRef[\"W\" + i]}>\n                        {props.inputState[\"W\" + i]}\n                    </div>\n                </div>\n                <div className=\"PreferenceArea\">\n                    {rightPreferences}\n                </div>\n            </div>\n        );\n    }\n\n    // controller state\n    const [control, setControl] = useState(null);\n\n    // meta state\n    const [meta, setMeta] = useState({\n        control: control,\n        progress: 100,\n        currentTime: 0,\n        duration: 0\n    });\n\n    return (\n        <React.Fragment>\n            {/* {JSON.stringify(timeline)} */}\n            {toggleAnime && <Anime initial={timeline} control={control} setMeta={setMeta}\n                                   animeConfig={{\n                                        autoplay: true,\n                                        duration: 1500,\n                                        easing: \"easeInOutSine\"\n                                        }}\n            ></Anime>}\n            <div className=\"LabelArea\">\n                    <div className=\"LabelEndColumn\">Proposers</div>\n                    <div className=\"LabelMidColumn\"></div>\n                    <div className=\"LabelEndColumn\">Recipients</div>\n                </div>\n            <div className=\"DisplayArea\">\n                <div className=\"DisplayLeftColumn\">\n                    {leftElems}\n                </div>\n                <div className=\"DisplayMidColumn\">\n                    <div id=\"Center\" className=\"Center\" ref={centerRef}></div>\n                </div>\n\n                <div className=\"DisplayRightColumn\">\n                    {rightElems}\n                </div> \n            </div>\n\n            <Control setControl={setControl} meta={meta} setInputState={props.setInputState} setShowSim={props.setShowSim}/>\n        </React.Fragment>\n    );\n}\n\n\nexport default Simulation;\n\n","import React from 'react';\nimport '../css/About.css';\n\nfunction About(props) {\n\n    const handleClick = () => {\n        props.setShowAbout(false);\n        props.setInputState({});\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"AboutArea\">\n                <div className=\"GoBackArea\">\n                    <button className=\"GoBackButton\" onClick={handleClick}>Go Back</button>\n                </div>\n                <div className=\"NoteArea\">\n                    <div className=\"NoteWrapperArea\">\n                        <div className=\"NotePaper\">\n                            <div className=\"NotePaperTitle\">\n                                Introduction\n                            </div>\n                            <hr className=\"NotePaperLine\" />\n                            <div className=\"NotePaperBody\">\n                                This is a visualization tool designed to help you to better understand the stable matching algorithm\n                                known as the Gale-Shapley Algorithm (1962). I created this to aid students of the University of \n                                Pennsylvania, but really it is free for everyone to experiment with.\n                                <br /> <br />\n                                Using this visualizer is incredibly simple: just enter the number of matches, along with the list \n                                of Proposers, Recipients, and each person's Preferences, then take advantage of \n                                this tool's powerful animation and playback capabilities.\n                                <br /> <br />\n                                Huge credit goes to the creators of the <a target=\"_blank\" href=\"https://reactjs.org/\">React.js</a> framework\n                                and the incredible animation engine \n                                known as <a target=\"_blank\" href=\"https://animejs.com/\">anime.js</a>.\n                                Special thanks to \"jmdisuanco\" for creating <a target=\"_blank\" href=\"https://www.npmjs.com/package/react-animejs\">this wrapper library</a> which\n                                allowed me to easily create these animations.\n                                <br /> <br />\n                                Please email <a href = \"mailto: robintan@wharton.upenn.edu\">robintan@wharton.upenn.edu</a> for any suggestions to improve this tool.\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"NoteWrapperArea\">\n                        <div className=\"NotePaper\">\n                            <div className=\"NotePaperTitle\">\n                                The Stable Matching Problem and the Gale-Shapley Algorithm\n                            </div>\n                            <hr className=\"NotePaperLine\" />\n                            <div className=\"NotePaperBody\">\n                                Given a set of <em>n</em> proposers (former. \"men\") and recipients (former. \"women\"), each with their own preferences,\n                                 our goal is to find an assignment such that:\n                                <ul>\n                                    <li>Each proposer ends up with exactly one recipient.</li>\n                                    <li>No pair of people (not already partners) would leave their current partners to engage with each other.</li>\n                                </ul>\n                                This is known as a <em>stable matching</em>. Its applications range from economics and networks to medical school assignments and, yes, romance.\n                                <br /> <br />\n                                The Gale-Shapley Algorithm proposes a greedy solution to this. We process proposers arbitrarily and go down each proposer's list of \n                                preferences for recipients. In each round, if a recipient is free, this <em>(proposer, recipient)</em> pair becomes temporarily \"engaged\". If the recipient is already engaged,\n                                it will leave (and thus free) its current partner only if it prefers this proposer more. This process continues until \n                                all <em>n</em> proposers and recipients are engaged with one other person.\n                                <br /> <br />\n                                It is proven to produce a unique and optimal solution. It runs in quadratic time.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default About;","import React, { useState } from 'react';\nimport Options from './Options.js';\nimport Display from './Display.js';\nimport Simulation from './Simulation.js';\nimport About from './About.js';\nimport '../css/Body.css';\n\nfunction Body() {\n\n    const [numMatches, setNumMatches] = useState(2);\n    const [inputState, setInputState] = useState(new Map()); // global state for all input data\n    const [showSim, setShowSim] = useState(false); // should be default false\n    const [showAbout, setShowAbout] = useState(false);\n\n    var simInstructions = []\n\n    if (showSim) {\n        simInstructions = getSimInstructions(numMatches, inputState);\n    }\n\n    return (\n        <React.Fragment>\n            {!showAbout && !showSim &&\n                <Options numMatches={numMatches} setNumMatches={setNumMatches} setShowAbout={setShowAbout}/>\n            }\n            {!showAbout && !showSim && <Display numMatches={numMatches} inputState={inputState} setInputState={setInputState}\n                                setShowSim={setShowSim} setNumMatches={setNumMatches} />}\n            {!showAbout && showSim && <Simulation numMatches={numMatches} inputState={inputState} setInputState={setInputState} \n                                    simInstructions={simInstructions} setShowSim={setShowSim} />}\n            {showAbout && \n                <About setShowAbout={setShowAbout} setInputState={setInputState}/>\n            }\n        </React.Fragment>\n    );\n}\n\nfunction getSimInstructions(numMatches, inputState) {\n    // Running Gale Shapley Algorithm\n    // Initialize rank structure\n    var simInstructions = []\n\n    var rank = {}\n    for (var i = 1; i <= numMatches; i++) {\n        rank[inputState[\"M\" + i]] = {}\n        rank[inputState[\"W\" + i]] = {}\n\n        for (var j = 1; j <= numMatches; j++) {\n            rank[inputState[\"M\" + i]][inputState[\"M\" + i + \"-P\" + j]] = j\n            rank[inputState[\"W\" + i]][inputState[\"W\" + i + \"-P\" + j]] = j\n        }\n    }\n\n    // A convenient dictionary for colors\n    var color = {}\n    color[inputState[\"W\" + 1]] = '#FF3939' // red\n    color[inputState[\"W\" + 2]] = '#3940FF' // blue\n    color[inputState[\"W\" + 3]] = '#3ABF50' // green\n    color[inputState[\"W\" + 4]] = '#F2B81A' // orange\n\n    // Maps from Person to ID\n    var reversePersonIndex = {}\n    for (var i = 1; i <= numMatches; i++) {\n        reversePersonIndex[inputState[\"M\" + i]] = \"M\" + i\n        reversePersonIndex[inputState[\"W\" + i]] = \"W\" + i\n    }\n\n    // Maps from Preference to ID given Person\n    var reversePrefIndex = {}\n    for (var i = 1; i <= numMatches; i++) {\n        reversePrefIndex[inputState[\"M\" + i]] = {}\n        reversePrefIndex[inputState[\"W\" + i]] = {}\n\n        for (var j = 1; j <= numMatches; j++) {\n            reversePrefIndex[inputState[\"M\" + i]][inputState[\"M\" + i + \"-P\" + j]] = \"M\" + i + \"-P\" + j\n            reversePrefIndex[inputState[\"W\" + i]][inputState[\"W\" + i + \"-P\" + j]] = \"W\" + i + \"-P\" + j\n        }\n    }\n    console.log(reversePrefIndex)\n\n    // Maps a person's current preferences\n    var personToPref = {}\n    for (var i = 1; i <= numMatches; i++) {\n        personToPref[inputState[\"M\" + i]] = []\n        personToPref[inputState[\"W\" + i]] = []\n\n        for (var j = 1; j <= numMatches; j++) {\n            personToPref[inputState[\"M\" + i]].push(inputState[\"M\" + i + \"-P\" + j])\n            personToPref[inputState[\"W\" + i]].push(inputState[\"W\" + i + \"-P\" + j])\n        }\n    }\n\n    // Map of matches (woman -> man)\n    var matches = {}\n\n    // Initialize queue\n    var queue = []\n    for (var i = 1; i <= numMatches; i++) {\n        queue.push(inputState[\"M\" + i])\n    }\n\n    const isPreferred = (woman, man1, man2) => {\n        return rank[woman][man1] < rank[woman][man2]\n    }\n\n    while (queue.length > 0) {\n        var currentMan = queue.shift() // #Ex: \"Aaron\"\n        var proposedWoman = personToPref[currentMan].shift() // Ex: \"Chloe\"\n\n        var prefId = reversePrefIndex[currentMan][proposedWoman]\n        var manId = reversePersonIndex[currentMan]\n        var womanId = reversePersonIndex[proposedWoman]\n\n        // Push \"Bold Preference\"\n        simInstructions.push(\n            {\n                type: \"Bold Preference\",\n                id: prefId\n            }\n        )\n\n        // Push \"Move In\"\n        simInstructions.push(\n            {\n                type: \"Move In\",\n                manId: manId,\n                womanId: womanId\n            }\n        )\n\n        var colorPrefId = reversePrefIndex[proposedWoman][currentMan];\n        \n        if (!(proposedWoman in matches)) { // Woman was free initially\n            matches[proposedWoman] = currentMan\n\n            // Push \"Flash Center\"\n            simInstructions.push(\n                {\n                    type: \"Flash Center\",\n                    color: \"#80F7A8\"\n                }\n            )\n\n            // Push \"Color Preference\"\n            simInstructions.push(\n                {\n                    type: \"Color Preference\",\n                    id: colorPrefId,\n                    color: color[proposedWoman]\n                }\n            )\n            \n            // Push \"Move Out\"\n            simInstructions.push(\n                {\n                    type: \"Move Out\",\n                    manId: manId,\n                    womanId: womanId,\n                    color: color[proposedWoman]\n                }\n            )\n        } else {\n            var rivalPartner = matches[proposedWoman]\n            var rivalId = reversePersonIndex[rivalPartner]\n\n            if (isPreferred(proposedWoman, currentMan, rivalPartner)) {\n                matches[proposedWoman] = currentMan\n                // marry currentMan and proposedWoman\n                // free rivalPartner\n                queue.push(rivalPartner)\n\n                // Push \"Flash Center\"\n                simInstructions.push(\n                    {\n                        type: \"Flash Center\",\n                        color: \"#80F7A8\"\n                    }\n                )\n\n                var rivalColorPrefId = reversePrefIndex[proposedWoman][rivalPartner];\n\n                // Push \"Discolor Preference\"\n                simInstructions.push(\n                    {\n                        type: \"Discolor Preference\",\n                        id: rivalColorPrefId,\n                    }\n                )\n\n                // Push \"Color Preference\"\n                simInstructions.push(\n                    {\n                        type: \"Color Preference\",\n                        id: colorPrefId,\n                        color: color[proposedWoman]\n                    }\n                )\n\n                // Push \"Free Person\"\n                console.log(rivalId)\n                simInstructions.push(\n                    {\n                        type: \"Free Person\",\n                        id: rivalId\n                    }\n                )\n\n                // Push \"Move Out\"\n                simInstructions.push(\n                    {\n                        type: \"Move Out\",\n                        manId: manId,\n                        womanId: womanId,\n                        color: color[proposedWoman]\n                    }\n                )\n            } else {\n                // match unsuccessful: currentMan rejected\n\n                // Push \"Flash Center\"\n                simInstructions.push(\n                    {\n                        type: \"Flash Center\",\n                        color: \"#F76D6D\"\n                    }\n                )\n\n                // Push \"Move Out\"\n                simInstructions.push(\n                    {\n                        type: \"Move Out\",\n                        manId: manId,\n                        womanId: womanId,\n                        color: \"none\"\n                    }\n                )\n                \n                queue.push(currentMan)\n            }\n        }\n\n        // Push \"Free Preference\"\n        simInstructions.push(\n            {\n                type: \"Free Preference\",\n                id: prefId\n            }\n        )\n    }\n\n    // Push \"Flush Preferences\"\n    simInstructions.push(\n        {\n            type: \"Flush Preferences\"\n        }\n    )\n\n    return simInstructions;\n}\n\n\nexport default Body;","import React from 'react';\nimport '../css/Footer.css';\n\nfunction Header() {\n  return (\n    <React.Fragment>\n        <div className=\"FooterArea\">\n            <div>\n                <hr className=\"FooterLine\"/>\n                <div className=\"FooterNote\">\n                    Created by Robin Tan using <a target=\"_blank\" href=\"https://reactjs.org/\">React.js</a> and <a target=\"_blank\" href=\"https://animejs.com/\">anime.js</a>\n                </div>\n            </div>\n        </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import Header from './components/Header.js';\nimport Body from './components/Body.js';\nimport Footer from './components/Footer.js'\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Body></Body>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}